{"version":3,"sources":["history.js","session.js","components/UI/Messages/index.js","components/Auth/LoginForm/View.js","consts.js","components/Auth/LoginForm/index.js","components/NotFound/index.js","config/config.js","services/Tasks.js","components/Auth/Login/index.js","helpers/Validation.js","components/UI/Modal/index.js","components/UI/Forms/Tasks/AddTaskForm/View.js","components/UI/Forms/Tasks/AddTaskForm/index.js","components/Sorting.js","components/SortedTasks/View.js","components/SortedTasks/index.js","components/Tasks/View.js","components/Tasks/index.js","components/Router/index.js","components/Main/index.js","App.js","index.js"],"names":["history","createBrowserHistory","isAuthorized","localStorage","getItem","logout","removeItem","push","Message","_ref","text","react_default","a","createElement","className","type","data-dismiss","View","props","onSubmit","submit","Link","to","name","placeholder","onChange","changeUsername","value","userName","changePassword","password","LoginForm","_useState","useState","_useState2","Object","slicedToArray","setUserName","_useState3","_useState4","setPassword","_useState5","_useState6","showMessage","setShowMessage","Messages","LoginForm_View","ev","currentTarget","preventDefault","isValidUser","setItem","NotFound","id","Component","BASE_API","getTasks","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","sortDir","sortField","currentPage","url","body","_args2","arguments","wrap","_context2","prev","next","length","undefined","concat","axios","get","sent","abrupt","data","message","tasks","stop","apply","this","fileUploadService","_ref3","_callee3","countFiles","imgPath","extn","image_holder","i","reader","_context3","$","files","substring","lastIndexOf","toLowerCase","empty","FileReader","onload","e","src","target","result","class","height","width","appendTo","show","readAsDataURL","alert","addTaskService","_ref4","_callee4","task","username","email","form","_context4","FormData","append","post","_x2","editTask","_ref6","_callee5","_ref5","status","_ref5$text","token","hash","tempQ","signature","config","_ref7","_context5","encodeURIComponent","crypto","createHash","update","digest","headers","Content-Type","_x3","Login","onClick","href","validateMaxLength","maxlength","validateRequired","Modal","state","isModalShow","_this","closeModal","setState","children","modal","PureComponent","changeField","usernameErr","emailErr","textErr","imgErr","fileUpload","viewAddedTask","addTask","isShowSuccessMessage","encType","method","htmlFor","required","pattern","rows","multiple","data-toggle","data-target","disabled","AddTaskForm","setUsername","setEmail","setText","_useState7","_useState8","setUsernameErr","_useState9","_useState10","setEmailErr","_useState11","_useState12","setTextErr","_useState13","_useState14","setImgErr","_useState15","_useState16","isValidImg","setIsValidImg","_useState17","_useState18","setIsModalShow","_useState19","_useState20","setIsShowSuccessMessage","checkUserName","valField","err","RegExp","test","checkImg","img","document","getElementById","includes","validateImg","modalData","substr","UI_Modal_Modal","AddTaskForm_View","nameField","checkEmail","checkText","then","innerHTML","lengthFormElements","elements","values","Array","item","reset","j","clearFileField","buff","fields","sortNumbers","b","localeCompare","sortStrings","onFocus","saveChanges","handleThClick","sort","setSortDirection","scope","data-field","map","image_path","react","key","defaultValue","onBlur","alt","renderItem","SortedTasks","setTasks","taskValue","setTaskValue","useEffect","fetchTasks","SortedTasks_View","_ev$target","defineProperty","dataset","field","toConsumableArray","setCurrentPage","todosPerPage","upperPageBound","setUpperPageBound","lowerPageBound","setLowerPageBound","isPrevBtnActive","setIsPrevBtnActive","isNextBtnActive","setIsNextBtnActive","pageBound","removeClass","addClass","handleClick","event","listId","Number","setPrevAndNextBtnClass","totalPage","Math","ceil","btnIncOrDecClick","listid","btnPrevOrNextClick","indexOfLastTodo","indexOfFirstTodo","currentTasks","slice","pageNumbers","propsTasksLength","renderPageNumbers","number","pageIncrementBtn","pageDecrementBtn","renderPrevBtn","renderNextBtn","components_SortedTasks","Tasks","res","useMemo","Auth_Login","Tasks_View_View","Tasks_AddTaskForm","Router","es_Router","Switch","Route","exact","path","component","Main","components_Router","App","components_Main","__webpack_require__","d","__webpack_exports__","authContext","React","createContext","ReactDOM","render","src_App_0"],"mappings":"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","file":"static/js/main.ca0e1e49.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history'\r\nexport const history = createBrowserHistory();","import { history } from \"./history\";\r\n\r\nconst LS_AUTH_KEY = \"isUserAuth\";\r\n\r\nconst isAuthorized = () => {\r\n  return localStorage.getItem(LS_AUTH_KEY) !== null;\r\n};\r\n\r\nconst login = () => {\r\n  localStorage.setItem(LS_AUTH_KEY, \"yes\");\r\n  history.push(\"/tasks\");\r\n};\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(LS_AUTH_KEY);\r\n  history.push(\"/login\");\r\n};\r\n\r\nexport { isAuthorized, login, logout };\r\n","import React from \"react\";\r\n\r\nconst Message = ({ text }) => (\r\n  <div className=\"alert alert-success alert-dismissible fade show successedAddedTaskMessage\">\r\n    <button type=\"button\" className=\"close\" data-dismiss=\"alert\">\r\n      &times;\r\n    </button>\r\n    <strong>{text}</strong>\r\n  </div>\r\n);\r\nexport default Message;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { onMainPage, loginText, passwordText, authText } from \"../../../consts\";\r\n\r\nconst View = props => (\r\n  <form onSubmit={props.submit}>\r\n    <div className=\"container login\">\r\n      <div className=\"row\">\r\n        <div className=\"col-sm\">\r\n          <Link to=\"/\">{onMainPage}</Link>\r\n        </div>\r\n        <div className=\"col-sm\">\r\n          <label>{loginText}</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"userName\"\r\n            placeholder=\"userName\"\r\n            onChange={props.changeUsername}\r\n            value={props.userName}\r\n          />\r\n        </div>\r\n        <div className=\"col-sm\">\r\n          <label>{passwordText}</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"password\"\r\n            onChange={props.changePassword}\r\n            value={props.password}\r\n          />\r\n        </div>\r\n        <div className=\"col-sm\">\r\n          <button className=\"btn btn-lg btn-success\">{authText}</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n);\r\n\r\nexport default View;\r\n","export const formName = \"Форма добавления нового таска.\";\r\nexport const newTaskText = \"Новый таск:\";\r\nexport const ok = \"ОК\";\r\nexport const createdText = \"Cоздал:\";\r\nexport const emailText = \"Email:\";\r\nexport const statusText = \"Статус\";\r\nexport const taskText = \"Текст таска:\";\r\nexport const imgText = \"Картинка\";\r\nexport const userNameText = \"Имя пользователя\";\r\nexport const adminEditText = \"Текст редактирования админом\";\r\nexport const labelText = \"Текст\";\r\nexport const cancel = \"Отмена\";\r\nexport const preview = \"Превью\";\r\nexport const addTaskText = \"Добавить таск\";\r\nexport const newTaskSuccessAddedMessage = \"Новый таск успешно добавлен!\";\r\nexport const notFoundText = \"404 Page\";\r\nexport const adminLogin = \"admin\";\r\nexport const adminPassword = \"123\";\r\nexport const loginText = \"Логин\";\r\nexport const passwordText = \"Пароль\";\r\nexport const authText = \"Авторизоваться\";\r\nexport const logoutText = \"Выйти\";\r\nexport const authMessage = \"Логин или пароль не верны!\";\r\nexport const onMainPage = \"На главную\";\r\nexport const notRunStatusText = \"Не выполнено\";\r\nexport const runStatusText = \"Выполнено\";\r\nexport const waitingForRunStatusText = \"Ожидает выполнения\";\r\nexport const adminChangedText = \"(Изменено админом)\";\r\nexport const titleText = \"Задачник\";\r\nexport const qtySymbolsForModal = 35;\r\n","import React, { useState } from \"react\";\r\nimport { login } from \"../../../session\";\r\nimport Message from \"../../UI/Messages\";\r\nimport View from \"./View\";\r\nimport { adminLogin, adminPassword, authMessage } from \"../../../consts\";\r\n\r\n// const Button = React.memo((props) => {\r\n//   //компонент\r\n// });\r\n\r\nconst isValidUser = ({ userName, password }) =>\r\n  userName === adminLogin && password === adminPassword;\r\n\r\nconst LoginForm = () => {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [showMessage, setShowMessage] = useState(\"\");\r\n\r\n  // changeUsername = e => this.setState({ userName: e.currentTarget.value });\r\n  // changePassword = e => this.setState({ password: e.currentTarget.value });\r\n  const changeUsername = ev => setUserName(ev.currentTarget.value);\r\n  const changePassword = ev => setPassword(ev.currentTarget.value);\r\n\r\n  const submit = ev => {\r\n    ev.preventDefault();\r\n    isValidUser({ userName, password }) ? login() : setShowMessage(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {showMessage && <Message text={authMessage} />}\r\n      <View\r\n        userName={userName}\r\n        password={password}\r\n        changeUsername={changeUsername}\r\n        changePassword={changePassword}\r\n        submit={submit}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { Component } from \"react\";\r\nimport { notFoundText } from \"../../consts\";\r\n\r\nclass NotFound extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row small-up-2 medium-up-3 large-up-4\" id=\"Body\">\r\n        <div className=\"medium-12 columns\">\r\n          <h2>{notFoundText}</h2>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotFound;\r\n","export const BASE_API = \"https://uxcandy.com/~shapoval/test-task-backend/\";\r\n","import axios from \"axios\";\r\nimport crypto from \"crypto\";\r\nimport $ from \"jquery\";\r\nimport { BASE_API } from \"../config/config\";\r\n\r\nexport const getToken = async objectAuth => {\r\n  axios.post(`${BASE_API}login`, objectAuth).then(response => {\r\n    console.log(\"saved successfully\" + response);\r\n  });\r\n};\r\n\r\nexport const getTasks = async (\r\n  sortDir = \"asc\",\r\n  sortField = \"email\",\r\n  currentPage = 1\r\n) => {\r\n  const url = `${BASE_API}?developer='Georgiy'&page=${currentPage}&sort_field=${sortField}&sort_direction =${sortDir}`;\r\n  const body = await axios.get(url);\r\n  return body.data.message.tasks;\r\n};\r\n\r\nexport const fileUploadService = async () => {\r\n  let countFiles = $(\"#fileUpload\")[0].files.length;\r\n  let imgPath = $(\"#fileUpload\")[0].value;\r\n\r\n  let extn = imgPath.substring(imgPath.lastIndexOf(\".\") + 1).toLowerCase();\r\n  let image_holder = $(\"#image-holder\");\r\n  image_holder.empty();\r\n  if (extn === \"gif\" || extn === \"png\" || extn === \"jpg\" || extn === \"jpeg\") {\r\n    if (typeof FileReader != \"undefined\") {\r\n      for (let i = 0; i < countFiles; i++) {\r\n        let reader = new FileReader();\r\n        reader.onload = function(e) {\r\n          $(\"<img />\", {\r\n            src: e.target.result,\r\n            class: \"thumb-image\",\r\n            height: 320,\r\n            width: 240\r\n          }).appendTo(image_holder);\r\n        };\r\n        image_holder.show();\r\n        reader.readAsDataURL($(\"#fileUpload\")[0].files[i]);\r\n      }\r\n    } else {\r\n      alert(\"This browser does not support FileReader.\");\r\n    }\r\n  }\r\n};\r\n\r\nexport const addTaskService = async task => {\r\n  const { username, email, text } = task;\r\n  let form = new FormData();\r\n  form.append(\"username\", username);\r\n  form.append(\"email\", email);\r\n  form.append(\"text\", text);\r\n  form.append(\"image\", $(\"#fileUpload\")[0].files[0]);\r\n\r\n  const url = `${BASE_API}create?developer='Georgiy'`;\r\n  const body = await axios.post(url, form);\r\n\r\n  return body.data.message;\r\n};\r\n\r\nexport const editTask = async ({ id, status, text = \"\" }) => {\r\n  const token = encodeURIComponent(\"beejee\");\r\n\r\n  const hash = data =>\r\n    crypto\r\n      .createHash(\"md5\")\r\n      .update(data)\r\n      .digest(\"hex\");\r\n\r\n  let tempQ = \"\";\r\n\r\n  if (status) tempQ += `status=${encodeURIComponent(status)}&`;\r\n  if (text) tempQ += `text=${encodeURIComponent(text)}&`;\r\n\r\n  const signature = hash(`${tempQ}token=${token}`);\r\n\r\n  const url = `${BASE_API}edit/${id}?developer='Georgiy'`;\r\n\r\n  const form = new FormData();\r\n  status && form.append(\"status\", status);\r\n  text && form.append(\"text\", text);\r\n  form.append(\"signature\", signature);\r\n  form.append(\"token\", token);\r\n\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"multipart/form-data\"\r\n    }\r\n  };\r\n\r\n  const { data } = await axios.post(url, form, config);\r\n\r\n  return !!data.status;\r\n};\r\n","import React from \"react\";\r\nimport { isAuthorized, logout } from \"../../../session\";\r\nimport { authText, logoutText } from \"../../../consts\";\r\n\r\nconst Login = () => (\r\n  <div>\r\n    {!isAuthorized() ? (\r\n      <button className=\"btn btn-lg btn-success\">\r\n        <a href=\"/login\">{authText}</a>\r\n      </button>\r\n    ) : (\r\n      <button onClick={logout} className=\"btn btn-lg btn-success\">\r\n        {logoutText}\r\n      </button>\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport default Login;\r\n","export const validateAlpabetical = value => {\r\n  const alfa = new RegExp(/^[a-z]+$/i);\r\n\r\n  return alfa.test(value) ? \"\" : \"Только латинские буквы!\";\r\n};\r\n\r\nexport const validateMaxLength = maxlength => value => {\r\n  return value.length < maxlength ? \"\" : \"Не более \" + maxlength + \"символов!\";\r\n};\r\n\r\nexport const validateRequired = value => {\r\n  return value.length > 0 ? \"\" : \"Поле обязательно к заполнению!\";\r\n};\r\n\r\nexport const validateEmail = value => {\r\n  const email = /^\\w+@\\w+\\.\\w{2,4}$/i;\r\n  return email.test(value) ? \"\" : \"Email невалидный!\";\r\n};\r\n\r\nexport const validateImg = () => {\r\n  const img = document.getElementById(\"fileUpload\").files[0];\r\n\r\n  let resCheck =\r\n    (img && img.name.includes(\".jpg\")) ||\r\n    (img && img.name.includes(\".png\")) ||\r\n    (img && img.name.includes(\".gif\"))\r\n      ? \"\"\r\n      : \"Загружаемая картинка должна быть одного из трех форматов - jpg, gif или png\";\r\n\r\n  return resCheck;\r\n};\r\n\r\nexport const clearFileField = () => {\r\n  let form = document.getElementById(\"feedback\");\r\n  let lengthFormElements = form.elements.length;\r\n  //Массив значений всех элементов формы\r\n  var values = new Array(form.elements.length);\r\n\r\n  //Запись значений всех элементов формы\r\n  for (var i = 0; i < lengthFormElements; i++) {\r\n    values[i] = form.elements.item(i).value;\r\n  }\r\n\r\n  form.reset(); //Сброс значений всех элементов формы\r\n\r\n  //Восстановление значений всех элементов формы, кроме input file\r\n  for (var j = 0; j < lengthFormElements; j++) {\r\n    //Здесь сравнивается тип, т.к. используется один input file\r\n    //Если элементов input file больше, то нужно использовать id\r\n    if (form.elements.item(j).type !== \"file\") {\r\n      form.elements.item(j).value = values[j];\r\n    }\r\n  }\r\n};\r\n","import React, { PureComponent } from \"react\";\r\nimport \"./Modal.css\";\r\n\r\nexport default class Modal extends PureComponent {\r\n  state = {\r\n    isModalShow: this.props.isModalShow\r\n  };\r\n\r\n  componentWillReceiveProps() {\r\n    this.setState({ isModalShow: true });\r\n  }\r\n\r\n  closeModal = () => {\r\n    this.setState({ isModalShow: false });\r\n  };\r\n\r\n  render() {\r\n    const { isModalShow } = this.state;\r\n    const { children } = this.props;\r\n    let modal = (\r\n      <div className=\"modalDialog\">\r\n        <div>\r\n          <button className=\"close\" onClick={this.closeModal}>\r\n            X\r\n          </button>\r\n          <h2>{children[0]}</h2>\r\n          <p>{children[2]}</p>\r\n          <p>{children[3]}</p>\r\n          <p>{children[4]}</p>\r\n          <button className=\"btn btn-success\" onClick={this.closeModal}>\r\n            {children[1]}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n    return <div>{isModalShow ? modal : \"\"}</div>;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Message from \"../../../Messages\";\r\nimport {\r\n  formName,\r\n  emailText,\r\n  userNameText,\r\n  labelText,\r\n  preview,\r\n  addTaskText,\r\n  newTaskSuccessAddedMessage\r\n} from \"../../../../../consts\";\r\n\r\nconst View = props => {\r\n  const {\r\n    username,\r\n    email,\r\n    text,\r\n    changeField,\r\n    usernameErr,\r\n    emailErr,\r\n    textErr,\r\n    imgErr,\r\n    fileUpload,\r\n    viewAddedTask,\r\n    addTask,\r\n    isShowSuccessMessage\r\n  } = props;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <h2>{formName}</h2>\r\n      </div>\r\n\r\n      <div id=\"preview-data\" className=\"panel panel-default\">\r\n        <div className=\"panel-heading\" />\r\n        <div className=\"panel-body\" />\r\n        <div id=\"image-holder\" />\r\n      </div>\r\n\r\n      <div className=\"panel panel-default\">\r\n        <div className=\"panel-body\">\r\n          <form\r\n            onSubmit={addTask}\r\n            id=\"feedback\"\r\n            className=\"form-horizontal\"\r\n            encType=\"multipart/form-data\"\r\n            method=\"post\"\r\n          >\r\n            <div className=\"form-group has-feedback\">\r\n              <label htmlFor=\"username\" className=\"control-label col-xs-3\">\r\n                {userNameText}:\r\n              </label>\r\n              <div className=\"col-xs-6\">\r\n                <div className=\"input-group\">\r\n                  <span className=\"input-group-addon\">\r\n                    <i className=\"glyphicon glyphicon-user\" />\r\n                  </span>\r\n                  <input\r\n                    id=\"username\"\r\n                    type=\"text\"\r\n                    className={`form-control ${usernameErr && \"errField\"}`}\r\n                    name=\"username\"\r\n                    value={username}\r\n                    required=\"required\"\r\n                    pattern=\"[A-Za-z]{6,}\"\r\n                    onChange={changeField}\r\n                  />\r\n                </div>\r\n                {usernameErr && <div className=\"err\">{usernameErr}</div>}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group has-feedback\">\r\n              <label htmlFor=\"email\" className=\"control-label col-xs-3\">\r\n                {emailText}:\r\n              </label>\r\n              <div className=\"col-xs-6\">\r\n                <div className=\"input-group\">\r\n                  <span className=\"input-group-addon\">\r\n                    <i className=\"glyphicon glyphicon-envelope\" />\r\n                  </span>\r\n                  <input\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    className={`form-control ${emailErr && \"errField\"}`}\r\n                    name=\"email\"\r\n                    value={email}\r\n                    required=\"required\"\r\n                    onChange={changeField}\r\n                  />\r\n                </div>\r\n                {emailErr && <div className=\"err\">{emailErr}</div>}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>{labelText}</label>\r\n              <textarea\r\n                id=\"text\"\r\n                name=\"text\"\r\n                className={`form-control ${textErr && \"errField\"}`}\r\n                rows=\"3\"\r\n                value={text}\r\n                onChange={changeField}\r\n              />\r\n            </div>\r\n            {textErr && <div className=\"err\">{textErr}</div>}\r\n            <div className=\"form-group\">\r\n              <input\r\n                id=\"fileUpload\"\r\n                type=\"file\"\r\n                className={`form-control ${imgErr && \"errField\"}`}\r\n                name=\"fupload\"\r\n                multiple=\"multiple\"\r\n                onChange={fileUpload}\r\n              />\r\n            </div>\r\n            {imgErr && <div className=\"err\">{imgErr}</div>}\r\n            <div className=\"panel-body\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-5\">\r\n                  <a href=\"/\">Отмена</a>\r\n                </div>\r\n                {username || email || text ? (\r\n                  <div className=\"col-md-1\">\r\n                    <button\r\n                      onClick={viewAddedTask}\r\n                      type=\"button\"\r\n                      className=\"btn btn-lg btn-success\"\r\n                      data-toggle=\"modal\"\r\n                      data-target=\"#myModal\"\r\n                    >\r\n                      {preview}\r\n                    </button>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n            </div>\r\n          </form>\r\n\r\n          <button\r\n            id=\"save\"\r\n            onClick={addTask}\r\n            type=\"button\"\r\n            className=\"btn btn-lg btn-success\"\r\n            disabled={\r\n              usernameErr ||\r\n              emailErr ||\r\n              textErr ||\r\n              imgErr ||\r\n              !username ||\r\n              !email ||\r\n              !text\r\n              //!isValidImg\r\n            }\r\n          >\r\n            {addTaskText}\r\n          </button>\r\n\r\n          {isShowSuccessMessage && (\r\n            <Message text={newTaskSuccessAddedMessage} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default View;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  clearFileField,\r\n  validateAlpabetical,\r\n  validateEmail,\r\n  validateImg,\r\n  validateMaxLength,\r\n  validateRequired\r\n} from \"../../../../../helpers/Validation\";\r\nimport {\r\n  addTaskService,\r\n  fileUploadService\r\n} from \"../../../../../services/Tasks\";\r\nimport Modal from \"../../../Modal\";\r\nimport View from \"./View\";\r\nimport {\r\n  newTaskText,\r\n  ok,\r\n  createdText,\r\n  emailText,\r\n  taskText,\r\n  qtySymbolsForModal\r\n} from \"../../../../../consts\";\r\n\r\nconst AddTaskForm = props => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [text, setText] = useState(\"\");\r\n  const [usernameErr, setUsernameErr] = useState(\"\");\r\n  const [emailErr, setEmailErr] = useState(\"\");\r\n  const [textErr, setTextErr] = useState(\"\");\r\n  const [imgErr, setImgErr] = useState(\"\");\r\n  const [isValidImg, setIsValidImg] = useState(false);\r\n  const [isModalShow, setIsModalShow] = useState(false);\r\n  const [isShowSuccessMessage, setIsShowSuccessMessage] = useState(false);\r\n\r\n  const checkUserName = valField => {\r\n    let err =\r\n      validateRequired(valField) ||\r\n      validateAlpabetical(valField) ||\r\n      validateMaxLength(16)(valField);\r\n\r\n    if (err) return setUsernameErr(err);\r\n    return setUsernameErr(\"\");\r\n  };\r\n\r\n  const checkEmail = valField => {\r\n    let err = validateRequired(valField) || validateEmail(valField);\r\n    if (err) return setEmailErr(err);\r\n    return setEmailErr(\"\");\r\n  };\r\n\r\n  const checkText = valField => {\r\n    let err = validateRequired(valField) || validateMaxLength(100)(valField);\r\n    if (err) return setTextErr(err);\r\n    return setTextErr(\"\");\r\n  };\r\n\r\n  const checkImg = () => {\r\n    let err = validateImg();\r\n    if (err)\r\n      return () => {\r\n        setImgErr(err);\r\n        setIsValidImg(false);\r\n      };\r\n    return () => {\r\n      setImgErr(\"\");\r\n      setIsValidImg(true);\r\n      setIsModalShow(false);\r\n    };\r\n  };\r\n\r\n  const changeField = ev => {\r\n    ev.preventDefault();\r\n    const nameField = ev.target.name;\r\n    const valField = ev.target.value;\r\n\r\n    if (nameField === \"username\") {\r\n      checkUserName(valField);\r\n      setUsername(valField);\r\n    }\r\n    if (nameField === \"email\") {\r\n      checkEmail(valField);\r\n      setEmail(valField);\r\n    }\r\n\r\n    if (nameField === \"text\") {\r\n      checkText(valField);\r\n      setText(valField);\r\n    }\r\n    setIsModalShow(false);\r\n  };\r\n\r\n  const fileUpload = () => {\r\n    fileUploadService();\r\n    checkImg();\r\n  };\r\n\r\n  const addTask = ev => {\r\n    ev.preventDefault();\r\n\r\n    const task = {\r\n      username,\r\n      email,\r\n      text\r\n    };\r\n\r\n    addTaskService(task).then(task => {\r\n      props.addTask(task);\r\n\r\n      setIsModalShow(false);\r\n      setIsShowSuccessMessage(true);\r\n      setUsername(\"\");\r\n      setEmail(\"\");\r\n      setText(\"\");\r\n    });\r\n    document.getElementById(\"image-holder\").innerHTML = \"\";\r\n    document.getElementById(\"save\").disabled = true;\r\n\r\n    clearFileField();\r\n  };\r\n\r\n  const viewAddedTask = () => {\r\n    setIsModalShow(true);\r\n  };\r\n\r\n  const modalData = [];\r\n  modalData.push(\r\n    newTaskText,\r\n    ok,\r\n    `${createdText} ${username}`,\r\n    `${emailText} ${email}`,\r\n    `${taskText} ${text.substr(0, qtySymbolsForModal)}`\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {isModalShow ? <Modal isModalShow={isModalShow}>{modalData}</Modal> : \"\"}\r\n      <View\r\n        username={username}\r\n        email={email}\r\n        text={text}\r\n        changeField={changeField}\r\n        usernameErr={usernameErr}\r\n        emailErr={emailErr}\r\n        textErr={textErr}\r\n        imgErr={imgErr}\r\n        isValidImg={isValidImg}\r\n        fileUpload={fileUpload}\r\n        isModalShow={isModalShow}\r\n        modalData={modalData}\r\n        viewAddedTask={viewAddedTask}\r\n        addTask={addTask}\r\n        isShowSuccessMessage={isShowSuccessMessage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTaskForm;\r\n","export const buff = {\r\n  sortDir: 0, // asc\r\n  sortField: \"username\",\r\n  fields: {\r\n    id: \"num\",\r\n    username: \"string\",\r\n    email: \"string\",\r\n    text: \"string\",\r\n    status: \"string\"\r\n  }\r\n};\r\n\r\nexport const sortNumbers = (a, b) => {\r\n  let sortDir = buff.sortDir;\r\n  let sortField = buff.sortField;\r\n\r\n  if (sortDir) {\r\n    return (\"\" + b[sortField]).localeCompare(a[sortField]);\r\n  } else {\r\n    return (\"\" + a[sortField]).localeCompare(b[sortField]);\r\n  }\r\n};\r\n\r\nexport const sortStrings = (a, b) => {\r\n  let sortDir = buff.sortDir;\r\n  let sortField = buff.sortField;\r\n\r\n  if (sortDir) {\r\n    return b[sortField] - a[sortField];\r\n  } else {\r\n    return a[sortField] - b[sortField];\r\n  }\r\n};\r\n\r\nexport const setSortDirection = () => {\r\n  let sort = {\r\n    id: null,\r\n    username: null,\r\n    email: null,\r\n    text: null,\r\n    status: null\r\n  };\r\n\r\n  sort[buff.sortField] = buff.sortDir ? \"desc\" : \"asc\";\r\n  return sort;\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport { isAuthorized } from \"../../session\";\r\nimport { setSortDirection } from \"../Sorting\";\r\nimport {\r\n  notRunStatusText,\r\n  runStatusText,\r\n  waitingForRunStatusText,\r\n  adminChangedText,\r\n  titleText,\r\n  userNameText,\r\n  emailText,\r\n  statusText,\r\n  taskText,\r\n  imgText,\r\n  adminEditText\r\n} from \"../../consts\";\r\n\r\nconst View = ({ onFocus, checkText, saveChanges, handleThClick, tasks }) => {\r\n  const renderItem = ({ id, username, email, text, image_path, status }) => {\r\n    return (\r\n      <Fragment key={id}>\r\n        <tr className=\"table-secondary\" key={id}>\r\n          <td>{username}</td>\r\n          <td>{email}</td>\r\n          {isAuthorized() ? (\r\n            <td>\r\n              <textarea\r\n                name=\"text\"\r\n                className={`form-control `}\r\n                rows=\"3\"\r\n                defaultValue={text}\r\n                onChange={ev => {\r\n                  checkText(ev);\r\n                }}\r\n                onBlur={ev => saveChanges(ev, id)}\r\n                onFocus={onFocus}\r\n              />\r\n            </td>\r\n          ) : (\r\n            <td>{text}</td>\r\n          )}\r\n          <td>\r\n            <img src={image_path} alt=\"\" width=\"100px\" />\r\n          </td>\r\n\r\n          {isAuthorized() ? (\r\n            <td>\r\n              <select\r\n                className=\"form-control\"\r\n                defaultValue={status}\r\n                name=\"status\"\r\n                id=\"status\"\r\n                onChange={ev => saveChanges(ev, id)}\r\n                onFocus={onFocus}\r\n              >\r\n                <option value={0}>{notRunStatusText}</option>\r\n                <option value={10}>{runStatusText}</option>\r\n              </select>\r\n            </td>\r\n          ) : (\r\n            <td>{status === 0 ? notRunStatusText : runStatusText}</td>\r\n          )}\r\n          {isAuthorized() && (\r\n            <td>\r\n              {status === 10 ? runStatusText : waitingForRunStatusText}\r\n              {adminChangedText}\r\n            </td>\r\n          )}\r\n        </tr>\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  const sort = setSortDirection();\r\n  return (\r\n    <div className=\"tasks\">\r\n      <div className=\"row\">\r\n        <h1>{titleText}</h1>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <table className=\"table table-striped\">\r\n          <thead>\r\n            <tr className=\"table-primary\">\r\n              <th scope=\"col\" data-field=\"text\" onClick={handleThClick}>\r\n                {\" \"}\r\n                {userNameText} {sort.username}\r\n              </th>\r\n              <th scope=\"col\" data-field=\"text\" onClick={handleThClick}>\r\n                {emailText}\r\n              </th>\r\n              <th scope=\"col\" data-field=\"text\" onClick={handleThClick}>\r\n                {\" \"}\r\n                {taskText} {sort.text}\r\n              </th>\r\n              <th scope=\"col\">{imgText}</th>\r\n              <th scope=\"col\" data-field=\"text\" onClick={handleThClick}>\r\n                {statusText} {sort.status}\r\n              </th>\r\n              {isAuthorized() && <th>{adminEditText}</th>}\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"table-striped\">\r\n            {tasks.map(item => renderItem(item))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default View;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { validateMaxLength, validateRequired } from \"../../helpers/Validation\";\r\nimport { editTask } from \"../../services/Tasks\";\r\nimport { buff, sortNumbers, sortStrings } from \"../Sorting\";\r\nimport View from \"./View\";\r\n\r\nconst SortedTasks = props => {\r\n  const [, setTasks] = useState([]);\r\n  const [taskValue, setTaskValue] = useState(\"\");\r\n  const [textErr, setTextErr] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let tasks = fetchTasks();\r\n    setTasks(tasks);\r\n  });\r\n\r\n  const fetchTasks = () => {\r\n    let sortField = buff.sortField;\r\n    let tasks = props.tasks;\r\n\r\n    if (\"text\" === buff.fields[sortField]) tasks.sort(sortStrings);\r\n    else tasks.sort(sortNumbers);\r\n    return tasks;\r\n  };\r\n\r\n  const handleThClick = ev => {\r\n    let sortField = buff.sortField;\r\n    let sortDir = buff.sortDir;\r\n\r\n    if (ev.currentTarget.dataset.field === sortField) {\r\n      sortDir = !sortDir;\r\n    } else {\r\n      sortField = ev.currentTarget.dataset.field;\r\n      sortDir = !sortDir;\r\n    }\r\n\r\n    // запрашиваем продукты заново с новыми сортировками\r\n    buff.sortField = sortField;\r\n    buff.sortDir = sortDir;\r\n    let tasks = fetchTasks();\r\n\r\n    setTasks([...tasks]);\r\n  };\r\n\r\n  const checkText = ev => {\r\n    const valField = ev.target.value;\r\n    let err = validateRequired(valField) || validateMaxLength(10)(valField);\r\n\r\n    if (err) return setTextErr(err);\r\n    return setTextErr(\"\");\r\n  };\r\n\r\n  const saveChanges = (ev, id) => {\r\n    const { value, name } = ev.target;\r\n\r\n    if (taskValue !== value && !textErr) {\r\n      editTask({\r\n        id,\r\n        [name]: value\r\n      });\r\n    }\r\n  };\r\n\r\n  const onFocus = e => {\r\n    setTaskValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <View\r\n        tasks={props.tasks}\r\n        onFocus={onFocus}\r\n        checkText={checkText}\r\n        textErr={textErr}\r\n        saveChanges={saveChanges}\r\n        handleThClick={handleThClick}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SortedTasks;\r\n","import $ from \"jquery\";\r\nimport React, { useEffect } from \"react\";\r\nimport SortedTasks from \"../SortedTasks\";\r\nimport \"./index.css\";\r\nimport { getTasks } from \"../../services/Tasks\";\r\n\r\nexport const View = props => {\r\n  const {\r\n    tasks,\r\n    currentPage,\r\n    setCurrentPage,\r\n    todosPerPage,\r\n    upperPageBound,\r\n    setUpperPageBound,\r\n    lowerPageBound,\r\n    setLowerPageBound,\r\n    isPrevBtnActive,\r\n    setIsPrevBtnActive,\r\n    isNextBtnActive,\r\n    setIsNextBtnActive,\r\n    pageBound\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    $(\"ul li.active\").removeClass(\"active\");\r\n    $(\"ul li#\" + currentPage).addClass(\"active\");\r\n  });\r\n\r\n  const handleClick = event => {\r\n    let listId = Number(event.target.id);\r\n    setCurrentPage(listId);\r\n    getTasks(currentPage).then(() => {\r\n      $(\"ul li.active\").removeClass(\"active\");\r\n      $(\"ul li#\" + listId).addClass(\"active\");\r\n      setPrevAndNextBtnClass(listId);\r\n    });\r\n  };\r\n\r\n  const setPrevAndNextBtnClass = listId => {\r\n    let totalPage = Math.ceil(tasks.length / todosPerPage);\r\n    setIsNextBtnActive(\"disabled\");\r\n    setIsPrevBtnActive(\"disabled\");\r\n\r\n    if (totalPage === listId && totalPage > 1) {\r\n      setIsPrevBtnActive(\"\");\r\n    } else if (listId === 1 && totalPage > 1) {\r\n      setIsNextBtnActive(\"\");\r\n    } else if (totalPage > 1) {\r\n      setIsNextBtnActive(\"\");\r\n      setIsPrevBtnActive(\"\");\r\n    }\r\n  };\r\n\r\n  const btnIncOrDecClick = type => {\r\n    setUpperPageBound(\r\n      type === \"inc\" ? upperPageBound + pageBound : upperPageBound - pageBound\r\n    );\r\n    setLowerPageBound(\r\n      type === \"inc\" ? lowerPageBound + pageBound : lowerPageBound - pageBound\r\n    );\r\n    let listid =\r\n      type === \"inc\" ? upperPageBound + 1 : upperPageBound - pageBound;\r\n    setCurrentPage(listid);\r\n    setPrevAndNextBtnClass(listid);\r\n  };\r\n\r\n  const btnPrevOrNextClick = type => {\r\n    if ((currentPage - 1) % pageBound === 0) {\r\n      setUpperPageBound(\r\n        type === \"next\"\r\n          ? upperPageBound + pageBound\r\n          : upperPageBound - pageBound\r\n      );\r\n      setLowerPageBound(\r\n        type === \"next\"\r\n          ? lowerPageBound + pageBound\r\n          : lowerPageBound - pageBound\r\n      );\r\n    }\r\n    let listId = type === \"next\" ? currentPage + 1 : currentPage - 1;\r\n    setCurrentPage(listId);\r\n    setPrevAndNextBtnClass(listId);\r\n  };\r\n\r\n  const indexOfLastTodo = currentPage * todosPerPage;\r\n  const indexOfFirstTodo = indexOfLastTodo - todosPerPage;\r\n  const currentTasks = tasks.slice(indexOfFirstTodo, indexOfLastTodo);\r\n\r\n  const pageNumbers = [];\r\n  const propsTasksLength = tasks.length;\r\n  for (let i = 1; i <= Math.ceil(propsTasksLength / todosPerPage); i += 1) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  const renderPageNumbers = pageNumbers.map(number => {\r\n    if (number === 1 && currentPage === 1) {\r\n      return (\r\n        <li key={number} className=\"active\" id={number}>\r\n          <button id={number} onClick={handleClick}>\r\n            {\" \"}\r\n            {number}\r\n          </button>\r\n        </li>\r\n      );\r\n    } else if (number < upperPageBound + 1 && number > lowerPageBound) {\r\n      return (\r\n        <li key={number} id={number}>\r\n          <button id={number} onClick={handleClick}>\r\n            {number}\r\n          </button>\r\n        </li>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n\r\n  let pageIncrementBtn = null;\r\n  if (pageNumbers.length > upperPageBound) {\r\n    pageIncrementBtn = (\r\n      <li>\r\n        <button onClick={btnIncOrDecClick(\"inc\")}> &hellip; </button>\r\n      </li>\r\n    );\r\n  }\r\n  let pageDecrementBtn = null;\r\n  if (lowerPageBound >= 1) {\r\n    pageDecrementBtn = (\r\n      <li>\r\n        <button onClick={btnIncOrDecClick}> &hellip; </button>\r\n      </li>\r\n    );\r\n  }\r\n  let renderPrevBtn = null;\r\n  if (isPrevBtnActive === \"disabled\") {\r\n    renderPrevBtn = (\r\n      <li className={isPrevBtnActive}>\r\n        <span id=\"btnPrev\"> Prev </span>\r\n      </li>\r\n    );\r\n  } else {\r\n    renderPrevBtn = (\r\n      <li className={isPrevBtnActive}>\r\n        <button id=\"btnPrev\" onClick={btnPrevOrNextClick}>\r\n          {\" \"}\r\n          Prev{\" \"}\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n  let renderNextBtn = null;\r\n  if (isNextBtnActive === \"disabled\") {\r\n    renderNextBtn = (\r\n      <li className={isNextBtnActive}>\r\n        <span id=\"btnNext\"> Next </span>\r\n      </li>\r\n    );\r\n  } else {\r\n    renderNextBtn = (\r\n      <li className={isNextBtnActive}>\r\n        <button id=\"btnNext\" onClick={() => btnPrevOrNextClick(\"inc\")}>\r\n          {\" \"}\r\n          Next{\" \"}\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <SortedTasks tasks={currentTasks} />\r\n      <ul className=\"pagination\">\r\n        {renderPrevBtn}\r\n        {pageDecrementBtn}\r\n        {renderPageNumbers}\r\n        {pageIncrementBtn}\r\n        {renderNextBtn}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { getTasks } from \"../../services/Tasks\";\r\nimport Login from \"../Auth/Login\";\r\nimport AddTaskForm from \"../UI/Forms/Tasks/AddTaskForm\";\r\nimport { View } from \"./View\";\r\n\r\nconst Tasks = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [todosPerPage] = useState(3);\r\n  const [upperPageBound, setUpperPageBound] = useState(3);\r\n  const [lowerPageBound, setLowerPageBound] = useState(0);\r\n  const [isPrevBtnActive, setIsPrevBtnActive] = useState(\"disabled\");\r\n  const [isNextBtnActive, setIsNextBtnActive] = useState(\"\");\r\n  const [pageBound] = useState(3);\r\n\r\n  useEffect(() => {\r\n    getTasks().then(res => {\r\n      setTasks(tasks.concat(res));\r\n    });\r\n  }, []);\r\n\r\n  useMemo(getTasks, [tasks]);\r\n\r\n  const addTask = task => {\r\n    setTasks(tasks.concat(task));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Login />\r\n      <View\r\n        tasks={tasks}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n        todosPerPage={todosPerPage}\r\n        upperPageBound={upperPageBound}\r\n        setUpperPageBound={setUpperPageBound}\r\n        lowerPageBound={lowerPageBound}\r\n        setLowerPageBound={setLowerPageBound}\r\n        isPrevBtnActive={isPrevBtnActive}\r\n        setIsPrevBtnActive={setIsPrevBtnActive}\r\n        isNextBtnActive={isNextBtnActive}\r\n        setIsNextBtnActive={setIsNextBtnActive}\r\n        pageBound={pageBound}\r\n      />\r\n      <AddTaskForm addTask={addTask} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import React from \"react\";\r\nimport { Route, Router as ReactRouter, Switch } from \"react-router-dom\";\r\nimport { history } from \"../../history\";\r\nimport LoginForm from \"../Auth/LoginForm\";\r\nimport NotFound from \"../NotFound\";\r\nimport Tasks from \"../Tasks\";\r\n\r\nconst Router = () => (\r\n  <ReactRouter history={history}>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Tasks} />\r\n      <Route path=\"/login\" component={LoginForm} />\r\n      <Route exact path=\"/tasks\" component={Tasks} />\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  </ReactRouter>\r\n);\r\n\r\nexport default Router;\r\n","import React from 'react';\r\nimport Router from '../Router';\r\n\r\nconst Main = () => (\r\n  <main>\r\n    <Router />\r\n  </main>\r\n);\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Main from \"./components/Main\";\r\nimport \"./index.css\";\r\n\r\nconst App = () => (\r\n  <div className=\"off-canvas-wrapper\">\r\n    <Main />\r\n    <hr />\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nexport const authContext = React.createContext(\r\n  localStorage.getItem(\"isUserAuth\")\r\n);\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}