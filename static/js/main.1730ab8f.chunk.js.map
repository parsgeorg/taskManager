{"version":3,"sources":["history.js","session.js","components/UI/Messages/index.js","components/Auth/LoginForm/View.js","consts.js","components/Auth/LoginForm/index.js","components/NotFound/index.js","config/config.js","services/Tasks.js","components/Auth/Login/index.js","helpers/Validation.js","components/UI/Modal/index.js","components/UI/Forms/Tasks/AddTaskForm/View.js","components/UI/Forms/Tasks/AddTaskForm/index.js","components/Sorting.js","components/SortedTasks/View.js","components/SortedTasks/index.js","components/Tasks/View.js","components/Tasks/index.js","components/Router/index.js","components/Main/index.js","App.js","index.js"],"names":["history","createBrowserHistory","isAuthorized","localStorage","getItem","logout","removeItem","push","Message","text","className","type","data-dismiss","View","props","onSubmit","submit","Link","to","name","placeholder","onChange","changeUsername","value","userName","changePassword","password","LoginForm","useState","setUserName","setPassword","showMessage","setShowMessage","ev","currentTarget","preventDefault","isValidUser","setItem","NotFound","id","Component","BASE_API","getTasks","a","sortDir","sortField","currentPage","url","axios","get","body","data","message","tasks","fileUploadService","countFiles","$","files","length","imgPath","extn","substring","lastIndexOf","toLowerCase","image_holder","empty","FileReader","i","reader","onload","e","src","target","result","class","height","width","appendTo","show","readAsDataURL","alert","addTaskService","task","username","email","form","FormData","append","post","editTask","status","token","encodeURIComponent","hash","crypto","createHash","update","digest","tempQ","signature","config","headers","Login","onClick","href","validateMaxLength","maxlength","validateRequired","Modal","state","isModalShow","closeModal","setState","this","children","modal","PureComponent","changeField","usernameErr","emailErr","textErr","imgErr","fileUpload","viewAddedTask","addTask","isShowSuccessMessage","encType","method","htmlFor","required","pattern","rows","multiple","data-toggle","data-target","disabled","AddTaskForm","setUsername","setEmail","setText","setUsernameErr","setEmailErr","setTextErr","setImgErr","isValidImg","setIsValidImg","setIsModalShow","setIsShowSuccessMessage","checkUserName","valField","err","RegExp","test","checkImg","img","document","getElementById","includes","validateImg","modalData","substr","nameField","checkEmail","checkText","then","innerHTML","lengthFormElements","elements","values","Array","item","reset","j","clearFileField","buff","fields","sortNumbers","b","localeCompare","sortStrings","onFocus","saveChanges","handleThClick","sort","setSortDirection","scope","data-field","map","image_path","key","defaultValue","onBlur","alt","renderItem","SortedTasks","setTasks","taskValue","setTaskValue","useEffect","fetchTasks","dataset","field","setCurrentPage","todosPerPage","upperPageBound","setUpperPageBound","lowerPageBound","setLowerPageBound","isPrevBtnActive","setIsPrevBtnActive","isNextBtnActive","setIsNextBtnActive","pageBound","removeClass","addClass","handleClick","event","listId","Number","setPrevAndNextBtnClass","totalPage","Math","ceil","btnIncOrDecClick","listid","btnPrevOrNextClick","indexOfLastTodo","indexOfFirstTodo","currentTasks","slice","pageNumbers","propsTasksLength","renderPageNumbers","number","pageIncrementBtn","pageDecrementBtn","renderPrevBtn","renderNextBtn","Tasks","res","concat","useMemo","Router","Switch","Route","exact","path","component","Main","App","HashRouter","basename","authContext","React","createContext","ReactDOM","render"],"mappings":"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","file":"static/js/main.1730ab8f.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history'\r\nexport const history = createBrowserHistory();","import { history } from \"./history\";\r\n\r\nconst LS_AUTH_KEY = \"isUserAuth\";\r\n\r\nconst isAuthorized = () => {\r\n  return localStorage.getItem(LS_AUTH_KEY) !== null;\r\n};\r\n\r\nconst login = () => {\r\n  localStorage.setItem(LS_AUTH_KEY, \"yes\");\r\n  history.push(\"/tasks\");\r\n};\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(LS_AUTH_KEY);\r\n  history.push(\"/login\");\r\n};\r\n\r\nexport { isAuthorized, login, logout };\r\n","import React from \"react\";\r\n\r\nconst Message = ({ text }) => (\r\n  <div className=\"alert alert-success alert-dismissible fade show successedAddedTaskMessage\">\r\n    <button type=\"button\" className=\"close\" data-dismiss=\"alert\">\r\n      &times;\r\n    </button>\r\n    <strong>{text}</strong>\r\n  </div>\r\n);\r\nexport default Message;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { onMainPage, loginText, passwordText, authText } from \"../../../consts\";\r\n\r\nconst View = props => (\r\n  <form onSubmit={props.submit}>\r\n    <div className=\"container login\">\r\n      <div className=\"row\">\r\n        <div className=\"col-sm\">\r\n          <Link to=\"/\">{onMainPage}</Link>\r\n        </div>\r\n        <div className=\"col-sm\">\r\n          <label>{loginText}</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"userName\"\r\n            placeholder=\"userName\"\r\n            onChange={props.changeUsername}\r\n            value={props.userName}\r\n          />\r\n        </div>\r\n        <div className=\"col-sm\">\r\n          <label>{passwordText}</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"password\"\r\n            onChange={props.changePassword}\r\n            value={props.password}\r\n          />\r\n        </div>\r\n        <div className=\"col-sm\">\r\n          <button className=\"btn btn-lg btn-success\">{authText}</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n);\r\n\r\nexport default View;\r\n","export const formName = \"Форма добавления нового таска.\";\r\nexport const newTaskText = \"Новый таск:\";\r\nexport const ok = \"ОК\";\r\nexport const createdText = \"Cоздал:\";\r\nexport const emailText = \"Email:\";\r\nexport const statusText = \"Статус\";\r\nexport const taskText = \"Текст таска:\";\r\nexport const imgText = \"Картинка\";\r\nexport const userNameText = \"Имя пользователя\";\r\nexport const adminEditText = \"Текст редактирования админом\";\r\nexport const labelText = \"Текст\";\r\nexport const cancel = \"Отмена\";\r\nexport const preview = \"Превью\";\r\nexport const addTaskText = \"Добавить таск\";\r\nexport const newTaskSuccessAddedMessage = \"Новый таск успешно добавлен!\";\r\nexport const notFoundText = \"404 Page\";\r\nexport const adminLogin = \"admin\";\r\nexport const adminPassword = \"123\";\r\nexport const loginText = \"Логин\";\r\nexport const passwordText = \"Пароль\";\r\nexport const authText = \"Авторизоваться\";\r\nexport const logoutText = \"Выйти\";\r\nexport const authMessage = \"Логин или пароль не верны!\";\r\nexport const onMainPage = \"На главную\";\r\nexport const notRunStatusText = \"Не выполнено\";\r\nexport const runStatusText = \"Выполнено\";\r\nexport const waitingForRunStatusText = \"Ожидает выполнения\";\r\nexport const adminChangedText = \"(Изменено админом)\";\r\nexport const titleText = \"Задачник\";\r\nexport const qtySymbolsForModal = 35;\r\n","import React, { useState } from \"react\";\r\nimport { login } from \"../../../session\";\r\nimport Message from \"../../UI/Messages\";\r\nimport View from \"./View\";\r\nimport { adminLogin, adminPassword, authMessage } from \"../../../consts\";\r\n\r\n// const Button = React.memo((props) => {\r\n//   //компонент\r\n// });\r\n\r\nconst isValidUser = ({ userName, password }) =>\r\n  userName === adminLogin && password === adminPassword;\r\n\r\nconst LoginForm = () => {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [showMessage, setShowMessage] = useState(\"\");\r\n\r\n  // changeUsername = e => this.setState({ userName: e.currentTarget.value });\r\n  // changePassword = e => this.setState({ password: e.currentTarget.value });\r\n  const changeUsername = ev => setUserName(ev.currentTarget.value);\r\n  const changePassword = ev => setPassword(ev.currentTarget.value);\r\n\r\n  const submit = ev => {\r\n    ev.preventDefault();\r\n    isValidUser({ userName, password }) ? login() : setShowMessage(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {showMessage && <Message text={authMessage} />}\r\n      <View\r\n        userName={userName}\r\n        password={password}\r\n        changeUsername={changeUsername}\r\n        changePassword={changePassword}\r\n        submit={submit}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { Component } from \"react\";\r\nimport { notFoundText } from \"../../consts\";\r\n\r\nclass NotFound extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row small-up-2 medium-up-3 large-up-4\" id=\"Body\">\r\n        <div className=\"medium-12 columns\">\r\n          <h2>{notFoundText}</h2>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotFound;\r\n","export const BASE_API = \"https://uxcandy.com/~shapoval/test-task-backend/\";\r\n","import axios from \"axios\";\r\nimport crypto from \"crypto\";\r\nimport $ from \"jquery\";\r\nimport { BASE_API } from \"../config/config\";\r\n\r\nexport const getToken = async objectAuth => {\r\n  axios.post(`${BASE_API}login`, objectAuth).then(response => {\r\n    console.log(\"saved successfully\" + response);\r\n  });\r\n};\r\n\r\nexport const getTasks = async (\r\n  sortDir = \"asc\",\r\n  sortField = \"email\",\r\n  currentPage = 1\r\n) => {\r\n  const url = `${BASE_API}?developer='Georgiy'&page=${currentPage}&sort_field=${sortField}&sort_direction =${sortDir}`;\r\n  const body = await axios.get(url);\r\n  return body.data.message.tasks;\r\n};\r\n\r\nexport const fileUploadService = async () => {\r\n  let countFiles = $(\"#fileUpload\")[0].files.length;\r\n  let imgPath = $(\"#fileUpload\")[0].value;\r\n\r\n  let extn = imgPath.substring(imgPath.lastIndexOf(\".\") + 1).toLowerCase();\r\n  let image_holder = $(\"#image-holder\");\r\n  image_holder.empty();\r\n  if (extn === \"gif\" || extn === \"png\" || extn === \"jpg\" || extn === \"jpeg\") {\r\n    if (typeof FileReader != \"undefined\") {\r\n      for (let i = 0; i < countFiles; i++) {\r\n        let reader = new FileReader();\r\n        reader.onload = function(e) {\r\n          $(\"<img />\", {\r\n            src: e.target.result,\r\n            class: \"thumb-image\",\r\n            height: 320,\r\n            width: 240\r\n          }).appendTo(image_holder);\r\n        };\r\n        image_holder.show();\r\n        reader.readAsDataURL($(\"#fileUpload\")[0].files[i]);\r\n      }\r\n    } else {\r\n      alert(\"This browser does not support FileReader.\");\r\n    }\r\n  }\r\n};\r\n\r\nexport const addTaskService = async task => {\r\n  const { username, email, text } = task;\r\n  let form = new FormData();\r\n  form.append(\"username\", username);\r\n  form.append(\"email\", email);\r\n  form.append(\"text\", text);\r\n  form.append(\"image\", $(\"#fileUpload\")[0].files[0]);\r\n\r\n  const url = `${BASE_API}create?developer='Georgiy'`;\r\n  const body = await axios.post(url, form);\r\n\r\n  return body.data.message;\r\n};\r\n\r\nexport const editTask = async ({ id, status, text = \"\" }) => {\r\n  const token = encodeURIComponent(\"beejee\");\r\n\r\n  const hash = data =>\r\n    crypto\r\n      .createHash(\"md5\")\r\n      .update(data)\r\n      .digest(\"hex\");\r\n\r\n  let tempQ = \"\";\r\n\r\n  if (status) tempQ += `status=${encodeURIComponent(status)}&`;\r\n  if (text) tempQ += `text=${encodeURIComponent(text)}&`;\r\n\r\n  const signature = hash(`${tempQ}token=${token}`);\r\n\r\n  const url = `${BASE_API}edit/${id}?developer='Georgiy'`;\r\n\r\n  const form = new FormData();\r\n  status && form.append(\"status\", status);\r\n  text && form.append(\"text\", text);\r\n  form.append(\"signature\", signature);\r\n  form.append(\"token\", token);\r\n\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"multipart/form-data\"\r\n    }\r\n  };\r\n\r\n  const { data } = await axios.post(url, form, config);\r\n\r\n  return !!data.status;\r\n};\r\n","import React from \"react\";\r\nimport { isAuthorized, logout } from \"../../../session\";\r\nimport { authText, logoutText } from \"../../../consts\";\r\n\r\nconst Login = () => (\r\n  <div>\r\n    {!isAuthorized() ? (\r\n      <button className=\"btn btn-lg btn-success\">\r\n        <a href=\"/login\">{authText}</a>\r\n      </button>\r\n    ) : (\r\n      <button onClick={logout} className=\"btn btn-lg btn-success\">\r\n        {logoutText}\r\n      </button>\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport default Login;\r\n","export const validateAlpabetical = value => {\r\n  const alfa = new RegExp(/^[a-z]+$/i);\r\n\r\n  return alfa.test(value) ? \"\" : \"Только латинские буквы!\";\r\n};\r\n\r\nexport const validateMaxLength = maxlength => value => {\r\n  return value.length < maxlength ? \"\" : \"Не более \" + maxlength + \"символов!\";\r\n};\r\n\r\nexport const validateRequired = value => {\r\n  return value.length > 0 ? \"\" : \"Поле обязательно к заполнению!\";\r\n};\r\n\r\nexport const validateEmail = value => {\r\n  const email = /^\\w+@\\w+\\.\\w{2,4}$/i;\r\n  return email.test(value) ? \"\" : \"Email невалидный!\";\r\n};\r\n\r\nexport const validateImg = () => {\r\n  const img = document.getElementById(\"fileUpload\").files[0];\r\n\r\n  let resCheck =\r\n    (img && img.name.includes(\".jpg\")) ||\r\n    (img && img.name.includes(\".png\")) ||\r\n    (img && img.name.includes(\".gif\"))\r\n      ? \"\"\r\n      : \"Загружаемая картинка должна быть одного из трех форматов - jpg, gif или png\";\r\n\r\n  return resCheck;\r\n};\r\n\r\nexport const clearFileField = () => {\r\n  let form = document.getElementById(\"feedback\");\r\n  let lengthFormElements = form.elements.length;\r\n  //Массив значений всех элементов формы\r\n  var values = new Array(form.elements.length);\r\n\r\n  //Запись значений всех элементов формы\r\n  for (var i = 0; i < lengthFormElements; i++) {\r\n    values[i] = form.elements.item(i).value;\r\n  }\r\n\r\n  form.reset(); //Сброс значений всех элементов формы\r\n\r\n  //Восстановление значений всех элементов формы, кроме input file\r\n  for (var j = 0; j < lengthFormElements; j++) {\r\n    //Здесь сравнивается тип, т.к. используется один input file\r\n    //Если элементов input file больше, то нужно использовать id\r\n    if (form.elements.item(j).type !== \"file\") {\r\n      form.elements.item(j).value = values[j];\r\n    }\r\n  }\r\n};\r\n","import React, { PureComponent } from \"react\";\r\nimport \"./Modal.css\";\r\n\r\nexport default class Modal extends PureComponent {\r\n  state = {\r\n    isModalShow: this.props.isModalShow\r\n  };\r\n\r\n  componentWillReceiveProps() {\r\n    this.setState({ isModalShow: true });\r\n  }\r\n\r\n  closeModal = () => {\r\n    this.setState({ isModalShow: false });\r\n  };\r\n\r\n  render() {\r\n    const { isModalShow } = this.state;\r\n    const { children } = this.props;\r\n    let modal = (\r\n      <div className=\"modalDialog\">\r\n        <div>\r\n          <button className=\"close\" onClick={this.closeModal}>\r\n            X\r\n          </button>\r\n          <h2>{children[0]}</h2>\r\n          <p>{children[2]}</p>\r\n          <p>{children[3]}</p>\r\n          <p>{children[4]}</p>\r\n          <button className=\"btn btn-success\" onClick={this.closeModal}>\r\n            {children[1]}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n    return <div>{isModalShow ? modal : \"\"}</div>;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Message from \"../../../Messages\";\r\nimport {\r\n  formName,\r\n  emailText,\r\n  userNameText,\r\n  labelText,\r\n  preview,\r\n  addTaskText,\r\n  newTaskSuccessAddedMessage\r\n} from \"../../../../../consts\";\r\n\r\nconst View = props => {\r\n  const {\r\n    username,\r\n    email,\r\n    text,\r\n    changeField,\r\n    usernameErr,\r\n    emailErr,\r\n    textErr,\r\n    imgErr,\r\n    fileUpload,\r\n    viewAddedTask,\r\n    addTask,\r\n    isShowSuccessMessage\r\n  } = props;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <h2>{formName}</h2>\r\n      </div>\r\n\r\n      <div id=\"preview-data\" className=\"panel panel-default\">\r\n        <div className=\"panel-heading\" />\r\n        <div className=\"panel-body\" />\r\n        <div id=\"image-holder\" />\r\n      </div>\r\n\r\n      <div className=\"panel panel-default\">\r\n        <div className=\"panel-body\">\r\n          <form\r\n            onSubmit={addTask}\r\n            id=\"feedback\"\r\n            className=\"form-horizontal\"\r\n            encType=\"multipart/form-data\"\r\n            method=\"post\"\r\n          >\r\n            <div className=\"form-group has-feedback\">\r\n              <label htmlFor=\"username\" className=\"control-label col-xs-3\">\r\n                {userNameText}:\r\n              </label>\r\n              <div className=\"col-xs-6\">\r\n                <div className=\"input-group\">\r\n                  <span className=\"input-group-addon\">\r\n                    <i className=\"glyphicon glyphicon-user\" />\r\n                  </span>\r\n                  <input\r\n                    id=\"username\"\r\n                    type=\"text\"\r\n                    className={`form-control ${usernameErr && \"errField\"}`}\r\n                    name=\"username\"\r\n                    value={username}\r\n                    required=\"required\"\r\n                    pattern=\"[A-Za-z]{6,}\"\r\n                    onChange={changeField}\r\n                  />\r\n                </div>\r\n                {usernameErr && <div className=\"err\">{usernameErr}</div>}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group has-feedback\">\r\n              <label htmlFor=\"email\" className=\"control-label col-xs-3\">\r\n                {emailText}:\r\n              </label>\r\n              <div className=\"col-xs-6\">\r\n                <div className=\"input-group\">\r\n                  <span className=\"input-group-addon\">\r\n                    <i className=\"glyphicon glyphicon-envelope\" />\r\n                  </span>\r\n                  <input\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    className={`form-control ${emailErr && \"errField\"}`}\r\n                    name=\"email\"\r\n                    value={email}\r\n                    required=\"required\"\r\n                    onChange={changeField}\r\n                  />\r\n                </div>\r\n                {emailErr && <div className=\"err\">{emailErr}</div>}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>{labelText}</label>\r\n              <textarea\r\n                id=\"text\"\r\n                name=\"text\"\r\n                className={`form-control ${textErr && \"errField\"}`}\r\n                rows=\"3\"\r\n                value={text}\r\n                onChange={changeField}\r\n              />\r\n            </div>\r\n            {textErr && <div className=\"err\">{textErr}</div>}\r\n            <div className=\"form-group\">\r\n              <input\r\n                id=\"fileUpload\"\r\n                type=\"file\"\r\n                className={`form-control ${imgErr && \"errField\"}`}\r\n                name=\"fupload\"\r\n                multiple=\"multiple\"\r\n                onChange={fileUpload}\r\n              />\r\n            </div>\r\n            {imgErr && <div className=\"err\">{imgErr}</div>}\r\n            <div className=\"panel-body\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-5\">\r\n                  <a href=\"/\">Отмена</a>\r\n                </div>\r\n                {username || email || text ? (\r\n                  <div className=\"col-md-1\">\r\n                    <button\r\n                      onClick={viewAddedTask}\r\n                      type=\"button\"\r\n                      className=\"btn btn-lg btn-success\"\r\n                      data-toggle=\"modal\"\r\n                      data-target=\"#myModal\"\r\n                    >\r\n                      {preview}\r\n                    </button>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n            </div>\r\n          </form>\r\n\r\n          <button\r\n            id=\"save\"\r\n            onClick={addTask}\r\n            type=\"button\"\r\n            className=\"btn btn-lg btn-success\"\r\n            disabled={\r\n              usernameErr ||\r\n              emailErr ||\r\n              textErr ||\r\n              imgErr ||\r\n              !username ||\r\n              !email ||\r\n              !text\r\n              //!isValidImg\r\n            }\r\n          >\r\n            {addTaskText}\r\n          </button>\r\n\r\n          {isShowSuccessMessage && (\r\n            <Message text={newTaskSuccessAddedMessage} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default View;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  clearFileField,\r\n  validateAlpabetical,\r\n  validateEmail,\r\n  validateImg,\r\n  validateMaxLength,\r\n  validateRequired\r\n} from \"../../../../../helpers/Validation\";\r\nimport {\r\n  addTaskService,\r\n  fileUploadService\r\n} from \"../../../../../services/Tasks\";\r\nimport Modal from \"../../../Modal\";\r\nimport View from \"./View\";\r\nimport {\r\n  newTaskText,\r\n  ok,\r\n  createdText,\r\n  emailText,\r\n  taskText,\r\n  qtySymbolsForModal\r\n} from \"../../../../../consts\";\r\n\r\nconst AddTaskForm = props => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [text, setText] = useState(\"\");\r\n  const [usernameErr, setUsernameErr] = useState(\"\");\r\n  const [emailErr, setEmailErr] = useState(\"\");\r\n  const [textErr, setTextErr] = useState(\"\");\r\n  const [imgErr, setImgErr] = useState(\"\");\r\n  const [isValidImg, setIsValidImg] = useState(false);\r\n  const [isModalShow, setIsModalShow] = useState(false);\r\n  const [isShowSuccessMessage, setIsShowSuccessMessage] = useState(false);\r\n\r\n  const checkUserName = valField => {\r\n    let err =\r\n      validateRequired(valField) ||\r\n      validateAlpabetical(valField) ||\r\n      validateMaxLength(16)(valField);\r\n\r\n    if (err) return setUsernameErr(err);\r\n    return setUsernameErr(\"\");\r\n  };\r\n\r\n  const checkEmail = valField => {\r\n    let err = validateRequired(valField) || validateEmail(valField);\r\n    if (err) return setEmailErr(err);\r\n    return setEmailErr(\"\");\r\n  };\r\n\r\n  const checkText = valField => {\r\n    let err = validateRequired(valField) || validateMaxLength(100)(valField);\r\n    if (err) return setTextErr(err);\r\n    return setTextErr(\"\");\r\n  };\r\n\r\n  const checkImg = () => {\r\n    let err = validateImg();\r\n    if (err)\r\n      return () => {\r\n        setImgErr(err);\r\n        setIsValidImg(false);\r\n      };\r\n    return () => {\r\n      setImgErr(\"\");\r\n      setIsValidImg(true);\r\n      setIsModalShow(false);\r\n    };\r\n  };\r\n\r\n  const changeField = ev => {\r\n    ev.preventDefault();\r\n    const nameField = ev.target.name;\r\n    const valField = ev.target.value;\r\n\r\n    if (nameField === \"username\") {\r\n      checkUserName(valField);\r\n      setUsername(valField);\r\n    }\r\n    if (nameField === \"email\") {\r\n      checkEmail(valField);\r\n      setEmail(valField);\r\n    }\r\n\r\n    if (nameField === \"text\") {\r\n      checkText(valField);\r\n      setText(valField);\r\n    }\r\n    setIsModalShow(false);\r\n  };\r\n\r\n  const fileUpload = () => {\r\n    fileUploadService();\r\n    checkImg();\r\n  };\r\n\r\n  const addTask = ev => {\r\n    ev.preventDefault();\r\n\r\n    const task = {\r\n      username,\r\n      email,\r\n      text\r\n    };\r\n\r\n    addTaskService(task).then(task => {\r\n      props.addTask(task);\r\n\r\n      setIsModalShow(false);\r\n      setIsShowSuccessMessage(true);\r\n      setUsername(\"\");\r\n      setEmail(\"\");\r\n      setText(\"\");\r\n    });\r\n    document.getElementById(\"image-holder\").innerHTML = \"\";\r\n    document.getElementById(\"save\").disabled = true;\r\n\r\n    clearFileField();\r\n  };\r\n\r\n  const viewAddedTask = () => {\r\n    setIsModalShow(true);\r\n  };\r\n\r\n  const modalData = [];\r\n  modalData.push(\r\n    newTaskText,\r\n    ok,\r\n    `${createdText} ${username}`,\r\n    `${emailText} ${email}`,\r\n    `${taskText} ${text.substr(0, qtySymbolsForModal)}`\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {isModalShow ? <Modal isModalShow={isModalShow}>{modalData}</Modal> : \"\"}\r\n      <View\r\n        username={username}\r\n        email={email}\r\n        text={text}\r\n        changeField={changeField}\r\n        usernameErr={usernameErr}\r\n        emailErr={emailErr}\r\n        textErr={textErr}\r\n        imgErr={imgErr}\r\n        isValidImg={isValidImg}\r\n        fileUpload={fileUpload}\r\n        isModalShow={isModalShow}\r\n        modalData={modalData}\r\n        viewAddedTask={viewAddedTask}\r\n        addTask={addTask}\r\n        isShowSuccessMessage={isShowSuccessMessage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTaskForm;\r\n","export const buff = {\r\n  sortDir: 0, // asc\r\n  sortField: \"username\",\r\n  fields: {\r\n    id: \"num\",\r\n    username: \"string\",\r\n    email: \"string\",\r\n    text: \"string\",\r\n    status: \"string\"\r\n  }\r\n};\r\n\r\nexport const sortNumbers = (a, b) => {\r\n  let sortDir = buff.sortDir;\r\n  let sortField = buff.sortField;\r\n\r\n  if (sortDir) {\r\n    return (\"\" + b[sortField]).localeCompare(a[sortField]);\r\n  } else {\r\n    return (\"\" + a[sortField]).localeCompare(b[sortField]);\r\n  }\r\n};\r\n\r\nexport const sortStrings = (a, b) => {\r\n  let sortDir = buff.sortDir;\r\n  let sortField = buff.sortField;\r\n\r\n  if (sortDir) {\r\n    return b[sortField] - a[sortField];\r\n  } else {\r\n    return a[sortField] - b[sortField];\r\n  }\r\n};\r\n\r\nexport const setSortDirection = () => {\r\n  let sort = {\r\n    id: null,\r\n    username: null,\r\n    email: null,\r\n    text: null,\r\n    status: null\r\n  };\r\n\r\n  sort[buff.sortField] = buff.sortDir ? \"desc\" : \"asc\";\r\n  return sort;\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport { isAuthorized } from \"../../session\";\r\nimport { setSortDirection } from \"../Sorting\";\r\nimport {\r\n  notRunStatusText,\r\n  runStatusText,\r\n  waitingForRunStatusText,\r\n  adminChangedText,\r\n  titleText,\r\n  userNameText,\r\n  emailText,\r\n  statusText,\r\n  taskText,\r\n  imgText,\r\n  adminEditText\r\n} from \"../../consts\";\r\n\r\nconst View = ({ onFocus, checkText, saveChanges, handleThClick, tasks }) => {\r\n  const renderItem = ({ id, username, email, text, image_path, status }) => {\r\n    return (\r\n      <Fragment key={id}>\r\n        <tr className=\"table-secondary\" key={id}>\r\n          <td>{username}</td>\r\n          <td>{email}</td>\r\n          {isAuthorized() ? (\r\n            <td>\r\n              <textarea\r\n                name=\"text\"\r\n                className={`form-control `}\r\n                rows=\"3\"\r\n                defaultValue={text}\r\n                onChange={ev => {\r\n                  checkText(ev);\r\n                }}\r\n                onBlur={ev => saveChanges(ev, id)}\r\n                onFocus={onFocus}\r\n              />\r\n            </td>\r\n          ) : (\r\n            <td>{text}</td>\r\n          )}\r\n          <td>\r\n            <img src={image_path} alt=\"\" width=\"100px\" />\r\n          </td>\r\n\r\n          {isAuthorized() ? (\r\n            <td>\r\n              <select\r\n                className=\"form-control\"\r\n                defaultValue={status}\r\n                name=\"status\"\r\n                id=\"status\"\r\n                onChange={ev => saveChanges(ev, id)}\r\n                onFocus={onFocus}\r\n              >\r\n                <option value={0}>{notRunStatusText}</option>\r\n                <option value={10}>{runStatusText}</option>\r\n              </select>\r\n            </td>\r\n          ) : (\r\n            <td>{status === 0 ? notRunStatusText : runStatusText}</td>\r\n          )}\r\n          {isAuthorized() && (\r\n            <td>\r\n              {status === 10 ? runStatusText : waitingForRunStatusText}\r\n              {adminChangedText}\r\n            </td>\r\n          )}\r\n        </tr>\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  const sort = setSortDirection();\r\n  return (\r\n    <div className=\"tasks\">\r\n      <div className=\"row\">\r\n        <h1>{titleText}</h1>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <table className=\"table table-striped\">\r\n          <thead>\r\n            <tr className=\"table-primary\">\r\n              <th scope=\"col\" data-field=\"text\" onClick={handleThClick}>\r\n                {\" \"}\r\n                {userNameText} {sort.username}\r\n              </th>\r\n              <th scope=\"col\" data-field=\"text\" onClick={handleThClick}>\r\n                {emailText}\r\n              </th>\r\n              <th scope=\"col\" data-field=\"text\" onClick={handleThClick}>\r\n                {\" \"}\r\n                {taskText} {sort.text}\r\n              </th>\r\n              <th scope=\"col\">{imgText}</th>\r\n              <th scope=\"col\" data-field=\"text\" onClick={handleThClick}>\r\n                {statusText} {sort.status}\r\n              </th>\r\n              {isAuthorized() && <th>{adminEditText}</th>}\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"table-striped\">\r\n            {tasks.map(item => renderItem(item))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default View;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { validateMaxLength, validateRequired } from \"../../helpers/Validation\";\r\nimport { editTask } from \"../../services/Tasks\";\r\nimport { buff, sortNumbers, sortStrings } from \"../Sorting\";\r\nimport View from \"./View\";\r\n\r\nconst SortedTasks = props => {\r\n  const [, setTasks] = useState([]);\r\n  const [taskValue, setTaskValue] = useState(\"\");\r\n  const [textErr, setTextErr] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let tasks = fetchTasks();\r\n    setTasks(tasks);\r\n  });\r\n\r\n  const fetchTasks = () => {\r\n    let sortField = buff.sortField;\r\n    let tasks = props.tasks;\r\n\r\n    if (\"text\" === buff.fields[sortField]) tasks.sort(sortStrings);\r\n    else tasks.sort(sortNumbers);\r\n    return tasks;\r\n  };\r\n\r\n  const handleThClick = ev => {\r\n    let sortField = buff.sortField;\r\n    let sortDir = buff.sortDir;\r\n\r\n    if (ev.currentTarget.dataset.field === sortField) {\r\n      sortDir = !sortDir;\r\n    } else {\r\n      sortField = ev.currentTarget.dataset.field;\r\n      sortDir = !sortDir;\r\n    }\r\n\r\n    // запрашиваем продукты заново с новыми сортировками\r\n    buff.sortField = sortField;\r\n    buff.sortDir = sortDir;\r\n    let tasks = fetchTasks();\r\n\r\n    setTasks([...tasks]);\r\n  };\r\n\r\n  const checkText = ev => {\r\n    const valField = ev.target.value;\r\n    let err = validateRequired(valField) || validateMaxLength(10)(valField);\r\n\r\n    if (err) return setTextErr(err);\r\n    return setTextErr(\"\");\r\n  };\r\n\r\n  const saveChanges = (ev, id) => {\r\n    const { value, name } = ev.target;\r\n\r\n    if (taskValue !== value && !textErr) {\r\n      editTask({\r\n        id,\r\n        [name]: value\r\n      });\r\n    }\r\n  };\r\n\r\n  const onFocus = e => {\r\n    setTaskValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <View\r\n        tasks={props.tasks}\r\n        onFocus={onFocus}\r\n        checkText={checkText}\r\n        textErr={textErr}\r\n        saveChanges={saveChanges}\r\n        handleThClick={handleThClick}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SortedTasks;\r\n","import $ from \"jquery\";\r\nimport React, { useEffect } from \"react\";\r\nimport SortedTasks from \"../SortedTasks\";\r\nimport \"./index.css\";\r\nimport { getTasks } from \"../../services/Tasks\";\r\n\r\nexport const View = props => {\r\n  const {\r\n    tasks,\r\n    currentPage,\r\n    setCurrentPage,\r\n    todosPerPage,\r\n    upperPageBound,\r\n    setUpperPageBound,\r\n    lowerPageBound,\r\n    setLowerPageBound,\r\n    isPrevBtnActive,\r\n    setIsPrevBtnActive,\r\n    isNextBtnActive,\r\n    setIsNextBtnActive,\r\n    pageBound\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    $(\"ul li.active\").removeClass(\"active\");\r\n    $(\"ul li#\" + currentPage).addClass(\"active\");\r\n  });\r\n\r\n  const handleClick = event => {\r\n    let listId = Number(event.target.id);\r\n    setCurrentPage(listId);\r\n    getTasks(currentPage).then(() => {\r\n      $(\"ul li.active\").removeClass(\"active\");\r\n      $(\"ul li#\" + listId).addClass(\"active\");\r\n      setPrevAndNextBtnClass(listId);\r\n    });\r\n  };\r\n\r\n  const setPrevAndNextBtnClass = listId => {\r\n    let totalPage = Math.ceil(tasks.length / todosPerPage);\r\n    setIsNextBtnActive(\"disabled\");\r\n    setIsPrevBtnActive(\"disabled\");\r\n\r\n    if (totalPage === listId && totalPage > 1) {\r\n      setIsPrevBtnActive(\"\");\r\n    } else if (listId === 1 && totalPage > 1) {\r\n      setIsNextBtnActive(\"\");\r\n    } else if (totalPage > 1) {\r\n      setIsNextBtnActive(\"\");\r\n      setIsPrevBtnActive(\"\");\r\n    }\r\n  };\r\n\r\n  const btnIncOrDecClick = type => {\r\n    setUpperPageBound(\r\n      type === \"inc\" ? upperPageBound + pageBound : upperPageBound - pageBound\r\n    );\r\n    setLowerPageBound(\r\n      type === \"inc\" ? lowerPageBound + pageBound : lowerPageBound - pageBound\r\n    );\r\n    let listid =\r\n      type === \"inc\" ? upperPageBound + 1 : upperPageBound - pageBound;\r\n    setCurrentPage(listid);\r\n    setPrevAndNextBtnClass(listid);\r\n  };\r\n\r\n  const btnPrevOrNextClick = type => {\r\n    if ((currentPage - 1) % pageBound === 0) {\r\n      setUpperPageBound(\r\n        type === \"next\"\r\n          ? upperPageBound + pageBound\r\n          : upperPageBound - pageBound\r\n      );\r\n      setLowerPageBound(\r\n        type === \"next\"\r\n          ? lowerPageBound + pageBound\r\n          : lowerPageBound - pageBound\r\n      );\r\n    }\r\n    let listId = type === \"next\" ? currentPage + 1 : currentPage - 1;\r\n    setCurrentPage(listId);\r\n    setPrevAndNextBtnClass(listId);\r\n  };\r\n\r\n  const indexOfLastTodo = currentPage * todosPerPage;\r\n  const indexOfFirstTodo = indexOfLastTodo - todosPerPage;\r\n  const currentTasks = tasks.slice(indexOfFirstTodo, indexOfLastTodo);\r\n\r\n  const pageNumbers = [];\r\n  const propsTasksLength = tasks.length;\r\n  for (let i = 1; i <= Math.ceil(propsTasksLength / todosPerPage); i += 1) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  const renderPageNumbers = pageNumbers.map(number => {\r\n    if (number === 1 && currentPage === 1) {\r\n      return (\r\n        <li key={number} className=\"active\" id={number}>\r\n          <button id={number} onClick={handleClick}>\r\n            {\" \"}\r\n            {number}\r\n          </button>\r\n        </li>\r\n      );\r\n    } else if (number < upperPageBound + 1 && number > lowerPageBound) {\r\n      return (\r\n        <li key={number} id={number}>\r\n          <button id={number} onClick={handleClick}>\r\n            {number}\r\n          </button>\r\n        </li>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n\r\n  let pageIncrementBtn = null;\r\n  if (pageNumbers.length > upperPageBound) {\r\n    pageIncrementBtn = (\r\n      <li>\r\n        <button onClick={btnIncOrDecClick(\"inc\")}> &hellip; </button>\r\n      </li>\r\n    );\r\n  }\r\n  let pageDecrementBtn = null;\r\n  if (lowerPageBound >= 1) {\r\n    pageDecrementBtn = (\r\n      <li>\r\n        <button onClick={btnIncOrDecClick}> &hellip; </button>\r\n      </li>\r\n    );\r\n  }\r\n  let renderPrevBtn = null;\r\n  if (isPrevBtnActive === \"disabled\") {\r\n    renderPrevBtn = (\r\n      <li className={isPrevBtnActive}>\r\n        <span id=\"btnPrev\"> Prev </span>\r\n      </li>\r\n    );\r\n  } else {\r\n    renderPrevBtn = (\r\n      <li className={isPrevBtnActive}>\r\n        <button id=\"btnPrev\" onClick={btnPrevOrNextClick}>\r\n          {\" \"}\r\n          Prev{\" \"}\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n  let renderNextBtn = null;\r\n  if (isNextBtnActive === \"disabled\") {\r\n    renderNextBtn = (\r\n      <li className={isNextBtnActive}>\r\n        <span id=\"btnNext\"> Next </span>\r\n      </li>\r\n    );\r\n  } else {\r\n    renderNextBtn = (\r\n      <li className={isNextBtnActive}>\r\n        <button id=\"btnNext\" onClick={() => btnPrevOrNextClick(\"inc\")}>\r\n          {\" \"}\r\n          Next{\" \"}\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <SortedTasks tasks={currentTasks} />\r\n      <ul className=\"pagination\">\r\n        {renderPrevBtn}\r\n        {pageDecrementBtn}\r\n        {renderPageNumbers}\r\n        {pageIncrementBtn}\r\n        {renderNextBtn}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { getTasks } from \"../../services/Tasks\";\r\nimport Login from \"../Auth/Login\";\r\nimport AddTaskForm from \"../UI/Forms/Tasks/AddTaskForm\";\r\nimport { View } from \"./View\";\r\n\r\nconst Tasks = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [todosPerPage] = useState(3);\r\n  const [upperPageBound, setUpperPageBound] = useState(3);\r\n  const [lowerPageBound, setLowerPageBound] = useState(0);\r\n  const [isPrevBtnActive, setIsPrevBtnActive] = useState(\"disabled\");\r\n  const [isNextBtnActive, setIsNextBtnActive] = useState(\"\");\r\n  const [pageBound] = useState(3);\r\n\r\n  useEffect(() => {\r\n    getTasks().then(res => {\r\n      setTasks(tasks.concat(res));\r\n    });\r\n  }, []);\r\n\r\n  useMemo(getTasks, [tasks]);\r\n\r\n  const addTask = task => {\r\n    setTasks(tasks.concat(task));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Login />\r\n      <View\r\n        tasks={tasks}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n        todosPerPage={todosPerPage}\r\n        upperPageBound={upperPageBound}\r\n        setUpperPageBound={setUpperPageBound}\r\n        lowerPageBound={lowerPageBound}\r\n        setLowerPageBound={setLowerPageBound}\r\n        isPrevBtnActive={isPrevBtnActive}\r\n        setIsPrevBtnActive={setIsPrevBtnActive}\r\n        isNextBtnActive={isNextBtnActive}\r\n        setIsNextBtnActive={setIsNextBtnActive}\r\n        pageBound={pageBound}\r\n      />\r\n      <AddTaskForm addTask={addTask} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import React from \"react\";\r\nimport { Route, Router as ReactRouter, Switch } from \"react-router-dom\";\r\nimport { history } from \"../../history\";\r\nimport LoginForm from \"../Auth/LoginForm\";\r\nimport NotFound from \"../NotFound\";\r\nimport Tasks from \"../Tasks\";\r\n\r\nconst Router = () => (\r\n  <ReactRouter history={history}>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Tasks} />\r\n      <Route path=\"/login\" component={LoginForm} />\r\n      <Route exact path=\"/tasks\" component={Tasks} />\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  </ReactRouter>\r\n);\r\n\r\nexport default Router;\r\n","import React from 'react';\r\nimport Router from '../Router';\r\n\r\nconst Main = () => (\r\n  <main>\r\n    <Router />\r\n  </main>\r\n);\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Main from \"./components/Main\";\r\nimport \"./index.css\";\r\n\r\nconst App = () => (\r\n    <HashRouter basename='/'>\r\n        <div className=\"off-canvas-wrapper\">\r\n            <Main/>\r\n            <hr/>\r\n        </div>\r\n    </HashRouter>\r\n);\r\n\r\nexport default App;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nexport const authContext = React.createContext(\r\n  localStorage.getItem(\"isUserAuth\")\r\n);\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}